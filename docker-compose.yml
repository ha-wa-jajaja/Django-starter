version: "3.9"

services:
    app:
        build:
            context: .
            args:
                - DEV=true
        ports:
            - "8000:8000"
        volumes:
            - ./app:/app
            - dev-static-data:/vol/web
        command: >
            sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
        environment:
            - DB_HOST=db
            - DB_NAME=demodb
            - DB_USER=demouser
            - DB_PASS=demopwd
        depends_on:
            db:
                # NOTE:
                # service_healthy is a default value that Docker Compose provides.
                # Other possible condition values include:
                # service_started (just wait for the container to start)
                # service_completed_successfully (for services that are expected to exit)
                condition: service_healthy

    db:
        image: postgres:13-alpine
        volumes:
            - dev-db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=demodb
            - POSTGRES_USER=demouser
            - POSTGRES_PASSWORD=demopwd
        healthcheck:
            # NOTE: "CMD-SHELL" tells Docker to run the command using the container's shell.
            # "pg_isready" PostgreSQL utility tool that checks if the PostgreSQL server is accepting connections.
            test: ["CMD-SHELL", "pg_isready -U demouser -d demodb"]
            interval: 5s
            timeout: 5s
            retries: 5

volumes:
    dev-db-data:
    dev-static-data:
